From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andreas Dinter <andreas.dinter@systec-electronic.com>
Date: Tue, 24 Jun 2025 13:24:38 +0200
Subject: [PATCH] Revert "PENDING: can: m_can: Support pinctrl wakeup state for
 Partial I/O"

This reverts commit c85877d40f8e70e1e201eca2ae1648781f238a37.
---
 drivers/net/can/m_can/m_can.c | 21 ---------------------
 1 file changed, 21 deletions(-)

diff --git a/drivers/net/can/m_can/m_can.c b/drivers/net/can/m_can/m_can.c
index ed8a3e759e1a..9c4e954c5096 100644
--- a/drivers/net/can/m_can/m_can.c
+++ b/drivers/net/can/m_can/m_can.c
@@ -23,7 +23,6 @@
 #include <linux/pinctrl/consumer.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
-#include <linux/reboot.h>
 
 #include "m_can.h"
 
@@ -2431,21 +2430,6 @@ static int m_can_class_setup_optional_pinctrl(struct m_can_classdev *class_dev)
 	return 0;
 }
 
-static int m_can_class_sysoff_handler(struct sys_off_data *data)
-{
-	struct m_can_classdev *cdev = data->cb_data;
-	struct device *dev = data->dev;
-	int ret;
-
-	if (device_may_wakeup(dev) && !IS_ERR(cdev->pinctrl_state_wakeup))
-		ret = pinctrl_select_state(cdev->pinctrl, cdev->pinctrl_state_wakeup);
-
-	if (ret)
-		dev_err(dev, "Failed to select pinctrl state 'wakeup', continuing poweroff\n");
-
-	return NOTIFY_DONE;
-}
-
 struct m_can_classdev *m_can_class_allocate_dev(struct device *dev,
 						int sizeof_priv)
 {
@@ -2488,11 +2472,6 @@ struct m_can_classdev *m_can_class_allocate_dev(struct device *dev,
 
 	m_can_of_parse_mram(class_dev, mram_config_vals);
 
-	devm_register_sys_off_handler(dev,
-				      SYS_OFF_MODE_POWER_OFF_PREPARE,
-				      SYS_OFF_PRIO_DEFAULT,
-				      m_can_class_sysoff_handler, class_dev);
-
 	ret = m_can_class_setup_optional_pinctrl(class_dev);
 	if (ret)
 		goto err_free_candev;
-- 
2.49.0

